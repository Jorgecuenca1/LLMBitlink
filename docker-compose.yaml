x-defaults: &default-env
  restart: always
  networks:
    - backend

x-airflow-common-env: &airflow-common-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
  AIRFLOW__WEBSERVER__SECRET_KEY: base64encodedFernetKeyHere
  AIRFLOW__WEBSERVER__PORT: 8081
  AIRFLOW__CORE__DAG_CONCURRENCY: 16
  AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 16

services:
  postgres:
    image: postgres:13
    container_name: postgres_airflow
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      POSTGRES_MULTIPLE_DATABASES: 'airflow_db,mlflow_db,another_db'
    volumes:
      - ./create-multiple-postgresql-databases.sh:/docker-entrypoint-initdb.d/create-multiple-postgresql-databases.sh
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M

  minio:
    image: minio/minio
    container_name: minio_storage
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow:
    build: ./mlflow
    env_file:
      - .env
    container_name: mlflow_tracking
    depends_on:
      - postgres
      - minio
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 20s
      retries: 3

  fastapi:
    build: ./app
    env_file:
      - .env
    volumes:
      - ./data:/data  
    container_name: fastapi_server
    depends_on:
      - mlflow
    ports:
      - "8800:8000"
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      HUGGINGFACE_TOKEN: "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"

  airflow-webserver:
    build: 
      context: ./airflow
      dockerfile: Dockerfile
      args:
        AIRFLOW_UID: 1000
        AIRFLOW_GID: 1000
    env_file:
      - .env
    container_name: airflow_web_server
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    entrypoint: /entrypoint.sh
    user: "1000:1000"
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  minio_data:
